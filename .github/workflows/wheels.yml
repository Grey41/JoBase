name: Build JoBase

on:
  workflow_dispatch:
    inputs:
      upload:
        description: Upload to PyPI
        required: true
        type: boolean

jobs:
  wheels:
    name: ${{matrix.plat[1]}} Wheels
    runs-on: ${{matrix.plat[0]}}

    strategy:
      matrix:
        plat:
          - [self-hosted, MacOS Silicon, "*-macosx_arm64", arm64]
          - [self-hosted, MacOS Intel, "*-macosx_x86_64", x86_64]
          - [ubuntu-latest, Musl Linux, "*-musllinux_*", Musl]
          - [ubuntu-latest, Manylinux, "*-manylinux_*", Linux]
          - [windows-latest, Windows 64-bit, "*64", x64]
          - [windows-latest, Windows 32-bit, "*32", Win32]

    env:
      BASE: ${{matrix.plat[3]}}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: docker/setup-qemu-action@v1
        if: runner.os == 'Linux'
        with:
          platforms: all

      - name: Build
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_BUILD: ${{matrix.plat[2]}}
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_I686_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_PYPY_X86_64_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_PPC64LE_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_S390X_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_PYPY_AARCH64_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_PYPY_I686_IMAGE: manylinux_2_24
          CIBW_ENVIRONMENT_PASS_LINUX: BASE RUNNER_OS
          CIBW_BEFORE_ALL: bash build.sh
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_ARCHS_LINUX: all

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

  source:
    name: Build Source
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        run: pipx run build --sdist

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload:
    name: Upload
    needs: [wheels, source]
    runs-on: ubuntu-latest
    if: ${{github.event.inputs.upload == 'true'}}

    steps:
      - name: Download
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Release
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{secrets.PYPI_TOKEN}}