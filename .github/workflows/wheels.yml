name: Build JoBase

on:
  workflow_dispatch:
    inputs:
      upload:
        description: Upload to PyPI
        required: true
        type: boolean

jobs:
  wheels:
    name: ${{matrix.plat[1]}} Wheels
    runs-on: ${{matrix.plat[0]}}

    strategy:
      fail-fast: false
      matrix:
        plat:
          - [macos-latest, MacOS, "*"]
          - [windows-latest, Win64, "*64"]
          - [windows-latest, Win32, "*32"]
          - [ubuntu-latest, Musllinux, "*musllinux*"]
          - [ubuntu-latest, Manylinux, "*manylinux*"]

    env:
      BASE: ${{matrix.plat[1] == 'Win64' && 'x64' || matrix.plat[1]}}

      BUILD: |
        git clone https://github.com/glfw/glfw.git
        cmake -S glfw -B glfw/build
        cmake --build glfw/build
        git clone https://gitlab.freedesktop.org/freetype/freetype.git
        cmake -S freetype -B freetype/build
        cmake --build freetype/build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_BUILD: ${{matrix.plat[2]}}
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_I686_IMAGE: manylinux_2_24
          CIBW_ARCHS_LINUX: x86_64 i686
          CIBW_BEFORE_ALL_MACOS: ${{env.BUILD}}

          CIBW_BEFORE_ALL_WINDOWS: >
            git clone https://github.com/glfw/glfw.git &&
            cmake -A %BASE% -S glfw -B glfw/build &&
            cmake --build glfw/build --config Release &&
            git clone https://gitlab.freedesktop.org/freetype/freetype.git &&
            cmake -A %BASE% -S freetype -B freetype/build &&
            cmake --build freetype/build --config Release

          CIBW_BEFORE_ALL_LINUX: |
            ${{matrix.plat[1] == 'Musllinux' && '
              apk update
              apk add libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libpng-dev' || '
              apt-get update
              apt-get install -y xorg-dev'}}
            ${{env.BUILD}}

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

  source:
    name: Build Source
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        run: pipx run build --sdist

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload:
    name: Upload
    needs: [wheels, source]
    runs-on: ubuntu-latest
    if: ${{github.event.inputs.upload == 'true'}}

    steps:
      - name: Download
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Release
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{secrets.PYPI_TOKEN}}